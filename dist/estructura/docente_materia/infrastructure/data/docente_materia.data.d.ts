import { Repository } from 'typeorm';
import { Pagination } from '../../../../base/application/logic/pagination';
import { DocenteMateria } from '../../domain/model/docente_materia';
import { DocenteMateriaDataI } from './docente_materia.datai';
import { Docente } from '../../../../estructura/docente/domain/model/docente';
import { Materia } from '../../../../estructura/materia/domain/model/materia';
declare class DocenteMateriaData implements DocenteMateriaDataI {
    static TITULO: string;
    static MODULO: string;
    static TABLA: string;
    static PATH_PAGINA: string;
    static PATH_PAGINA_FORM: string;
    result: any;
    docente_materia1?: DocenteMateria;
    docente_materias: DocenteMateria[];
    private docente_materia_data1;
    docentesFK: Docente[];
    materiasFK: Materia[];
    private readonly docenteLogic;
    private readonly materiaLogic;
    constructor(docente_materia_data1: Repository<DocenteMateria>);
    getTodos(pagination1: Pagination, relations1: any): Promise<DocenteMateria[]>;
    getBuscar(builder_object_docente_materia1: any, pagination1: Pagination, relations1: any): Promise<DocenteMateria[]>;
    getBuscarGeneral(builder_object_docente_materia1: any, pagination1: Pagination, relations1: any): Promise<DocenteMateria[]>;
    getBuscarUno(builder_object_docente_materia1: any, relations1: any): Promise<DocenteMateria>;
    nuevo(docente_materia1: DocenteMateria): Promise<any>;
    actualizar(docente_materia1: DocenteMateria): Promise<any>;
    eliminar(id: number): Promise<any>;
    nuevos(docente_materias: Array<DocenteMateria>): Promise<void>;
    eliminars(ids: Array<number>): Promise<void>;
    actualizars(updates_docente_materias: Array<DocenteMateria>, updates_columnas: Array<string>): Promise<void>;
    getEntitiesFromModels(result: any): DocenteMateria[];
    getEntityFromModel(result: any): DocenteMateria;
    getModelsFromEntities(docente_materias: DocenteMateria[]): DocenteMateria[];
    getModelFromEntity(docente_materia1: DocenteMateria): DocenteMateria;
    getBuilderFunctionObjectParametroSeleccionar(id: number): any;
    getBuilderFunctionObjectParametroBuscar(req: any): any;
    getFks(): Promise<void>;
}
export { DocenteMateriaData };
