import { Repository } from 'typeorm';
import { Pagination } from '../../../../base/application/logic/pagination';
import { Materia } from '../../domain/model/materia';
import { MateriaDataI } from './materia.datai';
declare class MateriaData implements MateriaDataI {
    static TITULO: string;
    static MODULO: string;
    static TABLA: string;
    static PATH_PAGINA: string;
    static PATH_PAGINA_FORM: string;
    result: any;
    materia1?: Materia;
    materias: Materia[];
    private materia_data1;
    constructor(materia_data1: Repository<Materia>);
    getTodos(pagination1: Pagination, relations1: any): Promise<Materia[]>;
    getBuscar(builder_object_materia1: any, pagination1: Pagination, relations1: any): Promise<Materia[]>;
    getBuscarGeneral(builder_object_materia1: any, pagination1: Pagination, relations1: any): Promise<Materia[]>;
    getBuscarUno(builder_object_materia1: any, relations1: any): Promise<Materia>;
    nuevo(materia1: Materia): Promise<any>;
    actualizar(materia1: Materia): Promise<any>;
    eliminar(id: number): Promise<any>;
    nuevos(materias: Array<Materia>): Promise<void>;
    eliminars(ids: Array<number>): Promise<void>;
    actualizars(updates_materias: Array<Materia>, updates_columnas: Array<string>): Promise<void>;
    getEntitiesFromModels(result: any): Materia[];
    getEntityFromModel(result: any): Materia;
    getModelsFromEntities(materias: Materia[]): Materia[];
    getModelFromEntity(materia1: Materia): Materia;
    getBuilderFunctionObjectParametroSeleccionar(id: number): any;
    getBuilderFunctionObjectParametroBuscar(req: any): any;
}
export { MateriaData };
