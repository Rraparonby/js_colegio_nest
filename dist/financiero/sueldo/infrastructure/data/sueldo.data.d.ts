import { Repository } from 'typeorm';
import { Pagination } from '../../../../base/application/logic/pagination';
import { Sueldo } from '../../domain/model/sueldo';
import { SueldoDataI } from './sueldo.datai';
import { Docente } from '../../../../estructura/docente/domain/model/docente';
declare class SueldoData implements SueldoDataI {
    static TITULO: string;
    static MODULO: string;
    static TABLA: string;
    static PATH_PAGINA: string;
    static PATH_PAGINA_FORM: string;
    result: any;
    sueldo1?: Sueldo;
    sueldos: Sueldo[];
    private sueldo_data1;
    docentesFK: Docente[];
    private readonly docenteLogic;
    constructor(sueldo_data1: Repository<Sueldo>);
    getTodos(pagination1: Pagination, relations1: any): Promise<Sueldo[]>;
    getBuscar(builder_object_sueldo1: any, pagination1: Pagination, relations1: any): Promise<Sueldo[]>;
    getBuscarGeneral(builder_object_sueldo1: any, pagination1: Pagination, relations1: any): Promise<Sueldo[]>;
    getBuscarUno(builder_object_sueldo1: any, relations1: any): Promise<Sueldo>;
    nuevo(sueldo1: Sueldo): Promise<any>;
    actualizar(sueldo1: Sueldo): Promise<any>;
    eliminar(id: number): Promise<any>;
    nuevos(sueldos: Array<Sueldo>): Promise<void>;
    eliminars(ids: Array<number>): Promise<void>;
    actualizars(updates_sueldos: Array<Sueldo>, updates_columnas: Array<string>): Promise<void>;
    getEntitiesFromModels(result: any): Sueldo[];
    getEntityFromModel(result: any): Sueldo;
    getModelsFromEntities(sueldos: Sueldo[]): Sueldo[];
    getModelFromEntity(sueldo1: Sueldo): Sueldo;
    getBuilderFunctionObjectParametroSeleccionar(id: number): any;
    getBuilderFunctionObjectParametroBuscar(req: any): any;
    getFks(): Promise<void>;
}
export { SueldoData };
