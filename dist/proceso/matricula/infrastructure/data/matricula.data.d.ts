import { Repository } from 'typeorm';
import { Pagination } from '../../../../base/application/logic/pagination';
import { Matricula } from '../../domain/model/matricula';
import { MatriculaDataI } from './matricula.datai';
import { Alumno } from '../../../../estructura/alumno/domain/model/alumno';
declare class MatriculaData implements MatriculaDataI {
    static TITULO: string;
    static MODULO: string;
    static TABLA: string;
    static PATH_PAGINA: string;
    static PATH_PAGINA_FORM: string;
    result: any;
    matricula1?: Matricula;
    matriculas: Matricula[];
    private matricula_data1;
    alumnosFK: Alumno[];
    private readonly alumnoLogic;
    constructor(matricula_data1: Repository<Matricula>);
    getTodos(pagination1: Pagination, relations1: any): Promise<Matricula[]>;
    getBuscar(builder_object_matricula1: any, pagination1: Pagination, relations1: any): Promise<Matricula[]>;
    getBuscarGeneral(builder_object_matricula1: any, pagination1: Pagination, relations1: any): Promise<Matricula[]>;
    getBuscarUno(builder_object_matricula1: any, relations1: any): Promise<Matricula>;
    nuevo(matricula1: Matricula): Promise<any>;
    actualizar(matricula1: Matricula): Promise<any>;
    eliminar(id: number): Promise<any>;
    nuevos(matriculas: Array<Matricula>): Promise<void>;
    eliminars(ids: Array<number>): Promise<void>;
    actualizars(updates_matriculas: Array<Matricula>, updates_columnas: Array<string>): Promise<void>;
    getEntitiesFromModels(result: any): Matricula[];
    getEntityFromModel(result: any): Matricula;
    getModelsFromEntities(matriculas: Matricula[]): Matricula[];
    getModelFromEntity(matricula1: Matricula): Matricula;
    getBuilderFunctionObjectParametroSeleccionar(id: number): any;
    getBuilderFunctionObjectParametroBuscar(req: any): any;
    getFks(): Promise<void>;
}
export { MatriculaData };
